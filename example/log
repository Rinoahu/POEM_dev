genome genome
no assembly mode
##########################################################################
step 1: Gene prediction
##########################################################################

##########################################################################
step 2: Modify the header of predicted gene...
##########################################################################

##########################################################################
step 3: Cdhit to do clustering and filter the close and remote species...
##########################################################################

##########################################################################
step 4: Use blast or Diamond to find homologous in cog database...
##########################################################################

##########################################################################
step 5: Operonic adjacency prediction...
##########################################################################

python /home/xiaoh/Dropbox/scripts/POEM_dev/bin/../lib/deep_operon.py predict eco.fasta_output/input.fsa eco.fasta_output/input.fsa\.locus /home/xiaoh/Dropbox/scripts/POEM_dev/bin/../config/Operon_Predictor/model.hdf5 > eco.fasta_output/input.fsa\.adjacency
##########################################################################
step 6: find the core genes of operon...
##########################################################################

##########################################################################
step 7: Output the result for cytoscape...
##########################################################################

# COG	func	name	color
